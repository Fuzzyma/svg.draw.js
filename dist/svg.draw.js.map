{"version":3,"file":"svg.draw.js","sources":["../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../src/svg.draw.js","../src/circle.js","../src/rectable.js","../src/ellipse.js","../src/lineable.js"],"sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import { Element, extend, on, off, regex } from '@svgdotjs/svg.js'\n\nconst defaults = { snapToGrid: 1 }\nlet drawPlugins = {}\n\n// Our Object which manages drawing\nclass PaintHandler {\n\n  constructor (el, event, options) {\n\n    this.el = el\n    el.remember('_paintHandler', this)\n\n    this.start = this.start.bind(this)\n    this.point = this.point.bind(this)\n    this.stop = this.stop.bind(this)\n    this.update = this.update.bind(this)\n    this.done = this.done.bind(this)\n    this.cancel = this.cancel.bind(this)\n\n    var plugin = this.getPlugin()\n\n    this.parent = el.parent()\n    this.p = this.parent.node.createSVGPoint() // Helping point for coord transformation\n    this.m = null // transformation matrix. We get it when drawing starts\n    this.startPoint = null\n    this.lastUpdateCall = null\n    this.options = {}\n\n    // Merge options and defaults\n    for (var i in defaults) {\n      this.options[i] = defaults[i]\n      if (typeof options[i] !== 'undefined') {\n        this.options[i] = options[i]\n      }\n    }\n\n    if (plugin.point) {\n      plugin['pointPlugin'] = plugin.point\n      delete plugin.point\n    }\n\n    // Import all methods from plugin into object\n    for (var j in plugin) {\n      this[j] = plugin[j]\n    }\n\n    // When we got an event, we use this for start, otherwise we use the click-event as default\n    if (!event) {\n      this.parent.on('click.draw', this.start)\n    }\n\n  }\n\n  transformPoint (x, y) {\n\n    this.p.x = x - (this.offset.x - window.pageXOffset)\n    this.p.y = y - (this.offset.y - window.pageYOffset)\n\n    return this.p.matrixTransform(this.m)\n\n  }\n\n  start (event) {\n    // get the current transform matrix from screen to element (offset corrected)\n    this.m = this.el.node.getScreenCTM().inverse()\n\n    // we save the current scrolling-offset here\n    this.offset = { x: window.pageXOffset, y: window.pageYOffset }\n\n    // we want to snap in screen-coords, so we have to scale the snapToGrid accordingly\n    this.options.snapToGrid *= Math.sqrt(this.m.a * this.m.a + this.m.b * this.m.b)\n\n    // save the startpoint\n    this.startPoint = this.snapToGrid(this.transformPoint(event.clientX, event.clientY))\n\n    // the plugin may do some initial work\n    if (this.init) { this.init(event) }\n\n    // Fire our `drawstart`-event. We send the offset-corrected cursor-position along\n    this.el.fire('drawstart', { event: event, p: this.p, m: this.m })\n\n    // We need to bind the update-function to the mousemove event to keep track of the cursor\n    on(window, 'mousemove.draw', this.update)\n\n    // Every consecutive call to start should map to point now\n    this.start = this.point\n\n  }\n\n  // This function draws a point if the element is a polyline or polygon\n  // Otherwise it will just stop drawing the shape cause we are done\n  point (event) {\n    if (this.point !== this.start) {\n      return this.start(event)\n    }\n    if (this.pointPlugin) {\n      return this.pointPlugin(event)\n    }\n\n    // If this function is not overwritten we just call stop\n    this.stop(event)\n  }\n\n  // The stop-function does the cleanup work\n  stop (event) {\n    if (event) {\n      this.update(event)\n    }\n\n    // Plugin may want to clean something\n    if (this.clean) { this.clean() }\n\n    // Unbind from all events\n    off(window, 'mousemove.draw')\n    this.parent.off('click.draw')\n\n    // remove Refernce to PaintHandler\n    this.el.forget('_paintHandler')\n\n    // overwrite draw-function since we never need it again for this element\n    this.el.draw = function () {\n    }\n\n    // Fire the `drawstop`-event\n    this.el.fire('drawstop')\n  }\n\n  // Updates the element while moving the cursor\n  update (event) {\n\n    if (!event && this.lastUpdateCall) {\n      event = this.lastUpdateCall\n    }\n\n    this.lastUpdateCall = event\n\n    // Get the current transform matrix\n    // it could have been changed since the start or the last update call\n    this.m = this.el.node.getScreenCTM().inverse()\n\n    // Call the calc-function which calculates the new position and size\n    this.calc(event)\n\n    // Fire the `drawupdate`-event\n    this.el.fire('drawupdate', { event: event, p: this.p, m: this.m })\n  }\n\n  // Called from outside. Finishs a poly-element\n  done () {\n    this.calc()\n    this.stop()\n\n    this.el.fire('drawdone')\n  }\n\n  // Called from outside. Cancels a poly-element\n  cancel () {\n    // stop drawing and remove the element\n    this.stop()\n    this.el.remove()\n\n    this.el.fire('drawcancel')\n  }\n\n  // Calculate the corrected position when using `snapToGrid`\n  snapToGrid (draw) {\n\n    var temp = null\n\n    // An array was given. Loop through every element\n    if (draw.length) {\n      temp = [draw[0] % this.options.snapToGrid, draw[1] % this.options.snapToGrid]\n      draw[0] -= temp[0] < this.options.snapToGrid / 2 ? temp[0] : temp[0] - this.options.snapToGrid\n      draw[1] -= temp[1] < this.options.snapToGrid / 2 ? temp[1] : temp[1] - this.options.snapToGrid\n      return draw\n    }\n\n    // Properties of element were given. Snap them all\n    for (var i in draw) {\n      temp = draw[i] % this.options.snapToGrid\n      draw[i] -= (temp < this.options.snapToGrid / 2 ? temp : temp - this.options.snapToGrid) + (temp < 0 ? this.options.snapToGrid : 0)\n    }\n\n    return draw\n  }\n\n  param (key, value) {\n    this.options[key] = value === null ? defaults[key] : value\n    this.update()\n  }\n\n  // Returns the plugin\n  getPlugin () {\n    return drawPlugins[this.el.type]\n  }\n}\n\nexport function registerPlugin (name, obj) {\n  var plugins = {}\n  if (typeof name === 'string') {\n    plugins[name] = obj\n  } else {\n    plugins = name\n  }\n\n  for (var shapes in plugins) {\n    var shapesArr = shapes.trim().split(regex.delimiter)\n\n    for (var i in shapesArr) {\n      drawPlugins[shapesArr[i]] = plugins[shapes]\n    }\n  }\n}\n\nextend(Element, {\n  // Draw element with mouse\n  draw (event, options, value) {\n\n    // sort the parameters\n    if (!(event instanceof window.Event || typeof event === 'string')) {\n      options = event\n      event = null\n    }\n\n    // get the old Handler or create a new one from event and options\n    var paintHandler = this.remember('_paintHandler') || new PaintHandler(this, event, options || {})\n\n    // When we got an event we have to start/continue drawing\n    if (event instanceof window.Event) {\n      paintHandler['start'](event)\n    }\n\n    // if event is located in our PaintHandler we handle it as method\n    if (paintHandler[event]) {\n      paintHandler[event](options, value)\n    }\n\n    return this\n  }\n\n})\n","import { registerPlugin } from './svg.draw.js'\n\nregisterPlugin('circle', {\n\n  init: function (e) {\n\n    var p = this.startPoint\n\n    this.el.attr({ cx: p.x, cy: p.y, r: 1 })\n  },\n\n  // We determine the radius by the cursor position\n  calc: function (e) {\n\n    var p = this.transformPoint(e.clientX, e.clientY)\n    var circle = {\n      cx: this.startPoint.x,\n      cy: this.startPoint.y,\n\n      // calculating the radius\n      r: Math.sqrt(\n        (p.x - this.startPoint.x) * (p.x - this.startPoint.x)\n                        + (p.y - this.startPoint.y) * (p.y - this.startPoint.y)\n      )\n    }\n\n    this.snapToGrid(circle)\n    this.el.attr(circle)\n  }\n\n})\n","import { registerPlugin } from './svg.draw.js'\n\nregisterPlugin('rect image', {\n\n  init: function (e) {\n\n    var p = this.startPoint\n\n    this.el.attr({ x: p.x, y: p.y, height: 0, width: 0 })\n  },\n\n  calc: function (e) {\n\n    var rect = {\n      x: this.startPoint.x,\n      y: this.startPoint.y\n    }; var p = this.transformPoint(e.clientX, e.clientY)\n\n    rect.width = p.x - rect.x\n    rect.height = p.y - rect.y\n\n    // Snap the params to the grid we specified\n    this.snapToGrid(rect)\n\n    // When width is less than zero, we have to draw to the left\n    // which means we have to move the start-point to the left\n    if (rect.width < 0) {\n      rect.x = rect.x + rect.width\n      rect.width = -rect.width\n    }\n\n    // ...same with height\n    if (rect.height < 0) {\n      rect.y = rect.y + rect.height\n      rect.height = -rect.height\n    }\n\n    // draw the element\n    this.el.attr(rect)\n  }\n\n})\n","import { registerPlugin } from './svg.draw.js'\n\nregisterPlugin('ellipse', {\n\n  init: function (e) {\n    // We start with a circle with radius 1 at the position of the cursor\n    var p = this.startPoint\n\n    this.el.attr({ cx: p.x, cy: p.y, rx: 1, ry: 1 })\n\n  },\n\n  calc: function (e) {\n    var p = this.transformPoint(e.clientX, e.clientY)\n\n    var ellipse = {\n      cx: this.startPoint.x,\n      cy: this.startPoint.y,\n      rx: Math.abs(p.x - this.startPoint.x),\n      ry: Math.abs(p.y - this.startPoint.y)\n    }\n\n    this.snapToGrid(ellipse)\n    this.el.attr(ellipse)\n  }\n\n})\n","import { List } from '@svgdotjs/svg.js'\nimport { registerPlugin } from './svg.draw.js'\n\nregisterPlugin('line polyline polygon', {\n\n  init: function () {\n    // When we draw a polygon, we immediately need 2 points.\n    // One start-point and one point at the mouse-position\n\n    this.set = new List()\n\n    var p = this.startPoint\n    var arr = [\n      [p.x, p.y],\n      [p.x, p.y]\n    ]\n\n    this.el.plot(arr)\n\n    // We draw little circles around each point\n    // This is absolutely not needed and maybe removed in a later release\n    this.drawCircles()\n\n  },\n\n  // The calc-function sets the position of the last point to the mouse-position (with offset ofc)\n  calc: function (e) {\n    var arr = this.el.array().valueOf()\n    arr.pop()\n\n    if (e) {\n      var p = this.transformPoint(e.clientX, e.clientY)\n      arr.push(this.snapToGrid([p.x, p.y]))\n    }\n\n    this.el.plot(arr)\n    this.drawCircles()\n  },\n\n  point: function (e) {\n\n    if (this.el.type.indexOf('poly') > -1) {\n      // Add the new Point to the point-array\n      var p = this.transformPoint(e.clientX, e.clientY)\n      var arr = this.el.array().valueOf()\n\n      arr.push(this.snapToGrid([p.x, p.y]))\n\n      this.el.plot(arr)\n      this.drawCircles()\n\n      // Fire the `drawpoint`-event, which holds the coords of the new Point\n      this.el.fire('drawpoint', { event: e, p: { x: p.x, y: p.y }, m: this.m })\n\n      return\n    }\n\n    // We are done, if the element is no polyline or polygon\n    this.stop(e)\n\n  },\n\n  clean: function () {\n\n    // Remove all circles\n    this.set.each(function () {\n      this.remove()\n    })\n\n    delete this.set\n\n  },\n\n  drawCircles: function () {\n    var array = this.el.array().valueOf()\n\n    this.set.each(function () {\n      this.remove()\n    })\n\n    this.set = new List()\n\n    for (var i = 0; i < array.length; ++i) {\n\n      this.p.x = array[i][0]\n      this.p.y = array[i][1]\n\n      var p = this.p.matrixTransform(this.parent.node.getScreenCTM().inverse().multiply(this.el.node.getScreenCTM()))\n\n      this.set.push(this.parent.circle(5).stroke({ width: 1 }).fill('#ccc').center(p.x, p.y))\n    }\n  },\n\n  undo: function () {\n    if (this.set.length) {\n      this.set.splice(-2, 1)[0].remove()\n      this.el.array().value.splice(-2, 1)\n      this.el.plot(this.el.array())\n      this.el.fire('undopoint')\n    }\n  }\n})\n"],"names":["defaults","snapToGrid","drawPlugins","PaintHandler","el","event","options","remember","start","bind","point","stop","update","done","cancel","plugin","getPlugin","parent","p","node","createSVGPoint","m","startPoint","lastUpdateCall","i","j","on","x","y","offset","window","pageXOffset","pageYOffset","matrixTransform","getScreenCTM","inverse","Math","sqrt","a","b","transformPoint","clientX","clientY","init","fire","pointPlugin","clean","off","forget","draw","calc","remove","temp","length","key","value","type","registerPlugin","name","obj","plugins","shapes","shapesArr","trim","split","regex","delimiter","extend","Element","Event","paintHandler","e","attr","cx","cy","r","circle","height","width","rect","rx","ry","ellipse","abs","set","List","arr","plot","drawCircles","array","valueOf","pop","push","indexOf","each","multiply","stroke","fill","center","undo","splice"],"mappings":"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"}